import { Pokemon } from "./pokemon3";
import type { QueryResolvers } from "../../../types.generated";
const apiUrl = "https://pokeapi.co/api/v2/pokemon";

interface Pokemon {
  name: string;
  url: string;
  id: number;
  base_experience: number;
  height: number;
  weight: number;
}

interface PokemonListReturn {
  results: Array<Pokemon>;
}

let PokemonList: Pokemon[];

export const pokemon: NonNullable<QueryResolvers["pokemon"]> = async (
  _parent,
  _arg,
  _ctx
) => {
  /* Implement Query.pokemon resolver logic here */
  const response = await globalThis.fetch(apiUrl);
  const data: PokemonListReturn = await response.json();
  console.log(data);

  const PokemonList: Array<Pokemon> = data.results.map(
    ({ name, url }: { name: string; url: string }) => {
      return { name, url };
    }
  );
  return PokemonList;
};
